schema {
    query: Query
}

"""
Result must always contain a flag indicating success or failure and list of error messages (if any).
"""
interface Result {
    "Flag indicating **success** (True) or **failure** (False)."
    success: Boolean!

    "List of error strings if error happened."
    errors: [String]
}

type Film {
    film_id: ID!
    title: String
    description: String
    release_year: String
    language_id: Int
    original_language_id: Int
    rental_duration: Int
    rental_rate: Int
    lenght: Int
    replacement_cost: Int
    rating: String
    special_features: String
    last_update: String

    actors: [Actor]
    categories: [Category]
}

type Actor {
    actor_id: ID!
    first_name: String!
    last_name: String!
}

type Category {
    category_id: ID!
    name: String!
    last_update: String!
}

type FilmsResult implements Result {
    success: Boolean!
    errors: [String]
    data: [Film]
}

type FilmResult implements Result {
    success: Boolean!
    errors: [String]
    data: Film
}

type Query {
    "List all available films."
    listFilms: FilmsResult!

    "Get a particular film via its id."
    getFilm(film_id: ID!): FilmResult!

    "Search for films via title."
    searchFilms(title: String!): FilmsResult!
}
